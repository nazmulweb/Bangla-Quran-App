[{"D:\\React js\\quran-app\\src\\index.js":"1","D:\\React js\\quran-app\\src\\App.js":"2","D:\\React js\\quran-app\\src\\reportWebVitals.js":"3","D:\\React js\\quran-app\\src\\components\\Sidebar.js":"4","D:\\React js\\quran-app\\src\\components\\Surah.js":"5","D:\\React js\\quran-app\\src\\components\\NoMatch.js":"6","D:\\React js\\quran-app\\src\\components\\Loading.js":"7","D:\\React js\\quran-app\\src\\components\\Header.js":"8","D:\\React js\\quran-app\\src\\components\\Welcome.js":"9","D:\\React js\\quran-app\\src\\components\\PrayerTime.js":"10"},{"size":500,"mtime":1610462506901,"results":"11","hashOfConfig":"12"},{"size":1880,"mtime":1611252375488,"results":"13","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"14","hashOfConfig":"12"},{"size":1070,"mtime":1611083016292,"results":"15","hashOfConfig":"12"},{"size":4151,"mtime":1611252366266,"results":"16","hashOfConfig":"12"},{"size":162,"mtime":1610382191959,"results":"17","hashOfConfig":"12"},{"size":659,"mtime":1610653904392,"results":"18","hashOfConfig":"12"},{"size":1545,"mtime":1611169975848,"results":"19","hashOfConfig":"12"},{"size":350,"mtime":1611235631518,"results":"20","hashOfConfig":"12"},{"size":5738,"mtime":1611252543959,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},"19147ms",{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"24"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"24"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"24"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45"},"D:\\React js\\quran-app\\src\\index.js",[],["46","47"],"D:\\React js\\quran-app\\src\\App.js",[],"D:\\React js\\quran-app\\src\\reportWebVitals.js",[],"D:\\React js\\quran-app\\src\\components\\Sidebar.js",[],"D:\\React js\\quran-app\\src\\components\\Surah.js",["48","49","50","51"],"import {useState, useEffect} from 'react';\r\nimport { useParams } from \"react-router-dom\";\r\nimport { Helmet } from \"react-helmet\";\r\nimport axios from 'axios';\r\nimport Loading from './Loading';\r\nimport './Surah.css';\r\nimport { conforms } from 'lodash';\r\n\r\nconst baseUrl = process.env.REACT_APP_QURAN_BASE_URL\r\n\r\nconst Surah = ({language}) => {\r\n    // get parameter id \r\n    let { id } = useParams();\r\n\r\n    const [surahName, setSurahName] = useState([]);\r\n\r\n    const [loading, setLoading ] = useState(true);\r\n    \r\n    const [urahWithTranslate, setTestNewSurah] = useState([]);\r\n    const [favorite, setFavorite] = useState([]);\r\n\r\n\r\n    const fetchData = (id) =>{\r\n\r\n        const arTranslateSurah = axios.get(`${baseUrl}v1/surah/${id}`);\r\n        const bnTranslateSurah = axios.get(`${baseUrl}v1/surah/${id}/${language}`);\r\n\r\n        axios.all([arTranslateSurah, bnTranslateSurah])\r\n            .then(\r\n                axios.spread((...datas)=> {\r\n                    let arSurah = datas[0].data.data.ayahs;\r\n                    let bnSurah = datas[1].data.data.ayahs;\r\n\r\n                    const suraArr = [[...arSurah], [...bnSurah]]\r\n\r\n                    setTestNewSurah(suraArr)\r\n                    setLoading(false)\r\n                })\r\n            )\r\n    }\r\n\r\n\r\n    useEffect(()=>{\r\n\r\n        setLoading(true)\r\n        // get surah \r\n        fetchData(id)\r\n\r\n        // get surah name \r\n        axios\r\n        .get(`${baseUrl}v1/surah/${id}/${language}`)\r\n        .then(res=>{\r\n            setSurahName(res.data.data)\r\n            localStorage.setItem('surah', JSON.stringify(res.data.data))\r\n        })\r\n        .catch(err =>{\r\n            console.log(\"error:\", err)\r\n        })\r\n\r\n    }, [id, language])\r\n\r\n    \r\n    useEffect(()=>{\r\n        console.log(favorite)\r\n        localStorage.setItem('favoriteAyah', JSON.stringify({ayah: favorite}))\r\n    },[favorite])\r\n\r\n\r\n    // loading \r\n    if(loading) return <div><Loading /></div>\r\n\r\n    return (\r\n        <div className=\"surah\">\r\n            <Helmet>\r\n                <title>{surahName !== undefined && surahName.englishName}</title>\r\n            </Helmet>\r\n            \r\n            <div className=\"surah__container\">\r\n                <div className=\"surah__header\">\r\n                    <div className=\"surah__name\">\r\n                       Name: {surahName.englishName}\r\n                    </div>\r\n                    <div className=\"surah__numberOfAyat\">\r\n                       Ayahs: {surahName.numberOfAyahs}\r\n                    </div>\r\n                </div>\r\n                <div className=\"surah__body\">\r\n                    <div>\r\n                        { urahWithTranslate[0] !== undefined &&\r\n                            urahWithTranslate[0].map((ayah, i)=>{\r\n\r\n                                let bangla = '';\r\n\r\n                                if(urahWithTranslate[1] != undefined || urahWithTranslate[1][i] != undefined){\r\n                                    bangla = urahWithTranslate[1][i].text\r\n                                }\r\n\r\n                                return (\r\n                                    <div className=\"surah__ayah\"  key={ayah.number} >\r\n                                        <div className=\"surah__ayahNumber\"> {i + 1} </div>\r\n                                        <div className=\"surah__ayahText\"> \r\n                                        <button className=\"surah__favorite\" onClick={()=> setFavorite([[ayah.text, bangla], ...favorite])}>love</button>\r\n                                            <p className=\"surah__arabicTranslate\">{ayah.text}</p>\r\n                                            <p>{bangla}</p>  \r\n                                        </div>\r\n                                    </div>\r\n                                )\r\n                            })\r\n                        }\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Surah\r\n\r\n// const Ayat = () => {\r\n//     return (\r\n//         <div className=\"surah\">\r\n//             <div className=\"surah__container\">\r\n//                 ayat\r\n//             </div>\r\n//         </div>\r\n//     )\r\n// }","D:\\React js\\quran-app\\src\\components\\NoMatch.js",[],"D:\\React js\\quran-app\\src\\components\\Loading.js",[],"D:\\React js\\quran-app\\src\\components\\Header.js",["52","53"],"import React, {useState, useEffect} from 'react';\r\nimport './Header.css';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport { Link } from 'react-router-dom'\r\n  \r\n\r\nconst Header = ({onclick, language}) =>  {\r\n\r\n  const [searchValue, setSearchValue] = useState(undefined);\r\n  const [loading, setLoading ] = useState(true);\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        axios\r\n        .get(`http://api.alquran.cloud/v1/search/${searchValue}/37/${language}`)\r\n        .then(res=>{\r\n          setSearchValue(res.data.data)\r\n          setLoading(false)\r\n        })\r\n        .catch(err =>{\r\n            console.log(\"error:\", err)\r\n        })\r\n    }, [searchValue])\r\n\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header__container\">\r\n                <div className=\"header__search\">\r\n                    {/* <input type=\"text\"  onChange={e => e.target.value ? setSearchValue(e.target.value) : setSearchValue(undefined)} /> */}\r\n                </div>\r\n                <div className=\"header__langauge\">\r\n                    <Link to=\"/prayer-time\" className=\"MuiButtonBase-root MuiButton-root MuiButton-contained MuiButton-containedPrimary MuiButton-disableElevation header__prayerTime\">Prayer time</Link>\r\n                    <Button variant=\"contained\" color=\"primary\" disableElevation onClick={()=> onclick()}>{ language === \"bn.bengali\" ? \"English\" : \"Bengali\" } </Button>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header\r\n\r\n","D:\\React js\\quran-app\\src\\components\\Welcome.js",[],"D:\\React js\\quran-app\\src\\components\\PrayerTime.js",["54"],"import React, {useState, useEffect} from 'react';\r\nimport axios from 'axios';\r\nimport Loading from './Loading';\r\nimport moment from 'moment';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport \"./PrayerTime.css\";\r\nimport Moon from '../assets/moon.svg';\r\nimport Sun from '../assets/sun.svg';\r\nimport sunSet from '../assets/sunset.svg';\r\nimport sunRise from '../assets/sunrise.svg';\r\nimport Clock from '../assets/clock.svg';\r\n\r\nconst useStyles = makeStyles({\r\n    table: {\r\n      minWidth: 650,\r\n    },\r\n  });\r\n\r\nconst baseUrl = process.env.REACT_APP_PRAYER_TIME_URL;\r\n\r\n\r\nconst PrayerTime = () => {\r\n    const classes = useStyles();\r\n    const [prayerTime, setPrayerTime] = useState([]);\r\n    const [loading, setLoading ] = useState(true);\r\n    const [time, setTime] = useState(null)\r\n\r\n    useEffect(()=>{\r\n        setLoading(true)\r\n        axios\r\n        .get(`${baseUrl}v1/timingsByCity?city=dhaka&country=bangladesh&method=8`)\r\n        .then(res=>{\r\n          setPrayerTime(res.data.data)\r\n          setLoading(false)\r\n        })\r\n        .catch(err =>{\r\n            console.log(\"error:\", err)\r\n        })\r\n    },[])\r\n\r\n    useEffect(()=>{\r\n        // time interval\r\n        setInterval(()=>{\r\n            setTime(new Date().toLocaleTimeString())\r\n        }, 1000)\r\n    }, [])\r\n\r\n    useEffect(()=>{\r\n        // clear time \r\n        console.log(prayerTime)\r\n        return ()=>{\r\n            clearInterval(setTime(null))\r\n        }\r\n    }, [])\r\n\r\n    // time format function \r\n    const timeFormater = (time) =>{\r\n        return moment(time + \"AM\", 'hh:mm a').format('LT')\r\n    }\r\n\r\n\r\n    if(loading) return <div><Loading /></div>\r\n\r\n    return (\r\n        <div className=\"prayertime\">\r\n            <TableContainer component={Paper}>\r\n                <Table className={classes.table} aria-label=\"simple table\">\r\n                    <TableHead>\r\n                        <TableRow>\r\n                            <TableCell className=\"prayertime__sunrise\">\r\n                                <div className=\"prayertime__headerWrapper\">\r\n                                    <div><img src={sunRise} alt=\"Sun\"/></div>\r\n                                    <div>{timeFormater(prayerTime.timings.Sunrise)}</div>\r\n                                    <small>(Sunrise)</small>\r\n                                </div>\r\n                            </TableCell>\r\n                            <TableCell  className=\"prayertime__clock\" align=\"left\">\r\n                                <div className=\"prayertime__headerWrapper\">\r\n                                    <div><img src={Clock} alt=\"Sun\"/></div>\r\n                                    <div>{time}</div>\r\n                                </div>\r\n                            </TableCell>\r\n                            <TableCell  className=\"prayertime__sunset\" align=\"right\">\r\n                                <div className=\"prayertime__headerWrapper\">\r\n                                    <div><img src={sunSet} alt=\"Sun\"/></div>\r\n                                    <div>{timeFormater(prayerTime.timings.Sunset)}</div>\r\n                                    <small>(Sunset)</small>\r\n                                </div>\r\n                            </TableCell>\r\n                        </TableRow>\r\n                    </TableHead>\r\n                    <TableBody>\r\n                        <TableRow className=\"prayertime__tableRow\">\r\n                            <TableCell colSpan={3} className=\"prayertime__prayerName\"><img src={Sun} alt=\"Sun\"/>Fajr</TableCell>\r\n                            <TableCell colSpan={3} className=\"prayertime__prayerTime\" align=\"right\">{timeFormater(prayerTime.timings.Fajr)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow className=\"prayertime__tableRow\">\r\n                            <TableCell className=\"prayertime__prayerName\"><img src={Sun} alt=\"Sun\"/>Dhuhr</TableCell>\r\n                            <TableCell colSpan={3} className=\"prayertime__prayerTime\" align=\"right\">{timeFormater(prayerTime.timings.Dhuhr)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow className=\"prayertime__tableRow\">\r\n                            <TableCell className=\"prayertime__prayerName\"><img src={Sun} alt=\"Sun\"/>Asr</TableCell>\r\n                            <TableCell colSpan={3} className=\"prayertime__prayerTime\" align=\"right\">{timeFormater(prayerTime.timings.Asr)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow className=\"prayertime__tableRow\">\r\n                            <TableCell className=\"prayertime__prayerName\"><img src={Moon} alt=\"Moon\"/>Maghrib</TableCell>\r\n                            <TableCell colSpan={3} className=\"prayertime__prayerTime\" align=\"right\">{timeFormater(prayerTime.timings.Maghrib)}</TableCell>\r\n                        </TableRow>\r\n                        <TableRow className=\"prayertime__tableRow\">\r\n                            <TableCell className=\"prayertime__prayerName\"><img src={Moon} alt=\"Moon\"/>Isha</TableCell>\r\n                            <TableCell colSpan={3} className=\"prayertime__prayerTime\" align=\"right\">{timeFormater(prayerTime.timings.Isha)}</TableCell>\r\n                        </TableRow>\r\n                    </TableBody>\r\n                </Table>\r\n            </TableContainer>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PrayerTime\r\n",{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","replacedBy":"58"},{"ruleId":"59","severity":1,"message":"60","line":7,"column":10,"nodeType":"61","messageId":"62","endLine":7,"endColumn":18},{"ruleId":"63","severity":1,"message":"64","line":60,"column":8,"nodeType":"65","endLine":60,"endColumn":22,"suggestions":"66"},{"ruleId":"67","severity":1,"message":"68","line":94,"column":57,"nodeType":"69","messageId":"70","endLine":94,"endColumn":59},{"ruleId":"67","severity":1,"message":"68","line":94,"column":97,"nodeType":"69","messageId":"70","endLine":94,"endColumn":99},{"ruleId":"59","severity":1,"message":"71","line":11,"column":10,"nodeType":"61","messageId":"62","endLine":11,"endColumn":17},{"ruleId":"63","severity":1,"message":"72","line":24,"column":8,"nodeType":"65","endLine":24,"endColumn":21,"suggestions":"73"},{"ruleId":"63","severity":1,"message":"74","line":61,"column":8,"nodeType":"65","endLine":61,"endColumn":10,"suggestions":"75"},"no-native-reassign",["76"],"no-negated-in-lhs",["77"],"no-unused-vars","'conforms' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchData'. Either include it or remove the dependency array.","ArrayExpression",["78"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'loading' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'language'. Either include it or remove the dependency array.",["79"],"React Hook useEffect has a missing dependency: 'prayerTime'. Either include it or remove the dependency array.",["80"],"no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},"Update the dependencies array to be: [fetchData, id, language]",{"range":"87","text":"88"},"Update the dependencies array to be: [language, searchValue]",{"range":"89","text":"90"},"Update the dependencies array to be: [prayerTime]",{"range":"91","text":"92"},[1701,1715],"[fetchData, id, language]",[689,702],"[language, searchValue]",[1826,1828],"[prayerTime]"]